version: '3.8'

services:

  db:
    image: postgres:15.1-alpine
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 3s
      timeout: 3s
      retries: 3

  migrations:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: python manage.py migrate

  api:
    build: .
    restart: on-failure
    ports:
      - '${API_PORT:-8000}:8000'
    volumes:
      - ./:/the_factory_bot_task/
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  bot:
    build: .
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
      api:
        condition: service_started
    env_file:
      - .env
    command: python manage.py runbot
